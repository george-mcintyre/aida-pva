// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2001
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.0

package edu.stanford.slac.aida.dp.dpSlc;

import java.text.DecimalFormat;

import org.omg.CORBA.*;
import edu.stanford.slac.aida.lib.util.common.*;
import edu.stanford.slac.except.*;
import edu.stanford.slac.err.*;

//
// IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI:1.0
//
/***/

public class DpSlcHistI_impl extends DpSlcHistIPOA
{
    private org.omg.PortableServer.POA poa_;
    private _PersistentDaObject da_;

    /*
    ** Native methods to obtain SLC History data
    */
    public native void DbInit() throws ServerInitialisationException;
    public native float[] GetHistSamples(String pvname, String starttime,
        String endtime) throws UnableToGetDataException;


    static DpSlcHistI_impl nat;  // Reference to invoke native methods

    static { System.loadLibrary("aidashr"); }

    static Err err;  // To log Slc errors


    public
    DpSlcHistI_impl(_PersistentDaObject da, org.omg.PortableServer.POA poa)
    {
        poa_ = poa;
        da_ = da;
        err = Err.getInstance();  // Get the Err singleton.
    }

    public org.omg.PortableServer.POA
    _default_POA()
    {
        if(poa_ != null)
            return poa_;
        else
            return super._default_POA();
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/init:1.0
    //
    public void
    init()
        throws edu.stanford.slac.except.ServerInitialisationException
    {
        // System.out.println ("Entered init");
        nat = this; // Save class reference for future native calls
        try {
            nat.DbInit();
        }
        catch (Exception ex) {
            throw (ServerInitialisationException) err.log (ex, 
               " while trying to initialize for SLC Hist database access.");
        }
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get:1.0
    //
    public org.omg.CORBA.Any
    get(String target,
        String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        final int SAMPLE_TIME_LEN = 6; 
        final int NUM_ELEMENTS_PER_SAMPLE = 7;

        int i;
        int numSamples;
        int times_offset;
        int year;
        int month;
        int day;
        int hour;
        int minute;
        int second;

        DecimalFormat twoDigits = new DecimalFormat("00");
        DecimalFormat fourDigits = new DecimalFormat("0000"); 

        float histArray[];


        //System.out.println ("Entered dpSlcHist_impl Any get");

        org.omg.CORBA.Any _r = _orb().create_any();


        // nArgs is the effective number of of parameters. The AIDA
        // CORBA API results in at least 1 arg always, because the AidaObject
        // API does not define versions of each API method with no args arg,
        // so CORBA must supply the args arg, but set it to null. That is
        // args[0]==null means no parameters were given to the AIDA API method.

        int nArgs = ( (args[0]==null) ? 0 : args.length );

        try {

            // Extract the start and end times from the parameters
            String startTime = null, endTime = null;
            for (i=0; i< nArgs ; i+=2 ) {
                if (args[i].equalsIgnoreCase("STARTTIME") )
                    startTime = args[i+1];
                else if (args[i].equalsIgnoreCase("ENDTIME") )
                    endTime = args[i+1];
            }

            //System.out.println("supplied start time = " + startTime);
            //System.out.println("supplied end time   = " + endTime);

            // Call the GetHistSamples C native method to get
            // SLC History data for the specified signal name
            // during the time interval specified by the start
            // and end times.

            histArray = nat.GetHistSamples(queryToSlcHistName(target),
                startTime, endTime);

            // The returned array of float values contains the
            // following information:
            //   1. The first element (0) contains the number of
            //      samples returned (n).
            //   2. The second through (n + 1) elements contains
            //      the sample data values.
            //   3. Following the data values, there are clusters
            //      of 6 elements for each sample representing
            //      data timestamp fields: year, month, day, hour,
            //      minute, and second.

            numSamples = (int) histArray[0];

            //System.out.println("numSamples = " + numSamples);

            double[] values = new double[numSamples];
            String[] times = new String[numSamples];
            int [] repCnt = new int[numSamples];

            // Loop for each returned sample.  Extract the data value
            // for the sample and store it in the next element of the
            // "values" array.  Extract the data sample timestamp fields
            // (year, month, day, hour, minute, and second) and form
            // a timestamp string to store in the next element of the
            // "times" array.

            times_offset = numSamples + 1;

            for (i = 0; i < numSamples; i++)
            {
                values[i] = histArray[i + 1];
                repCnt[i] = 0;

                year = (int) histArray[times_offset + (SAMPLE_TIME_LEN * i)];
                month = (int) histArray[times_offset + (SAMPLE_TIME_LEN * i) + 1];
                day = (int) histArray[times_offset + (SAMPLE_TIME_LEN * i) + 2];
                hour = (int) histArray[times_offset + (SAMPLE_TIME_LEN * i) + 3];
                minute = (int) histArray[times_offset + (SAMPLE_TIME_LEN * i) + 4];
                second = (int) histArray[times_offset + (SAMPLE_TIME_LEN * i) + 5];

                times[i] = twoDigits.format(month) + "/" +
                           twoDigits.format(day) + "/" +
                           fourDigits.format(year) + " " +
                           twoDigits.format(hour) + ":" +
                           twoDigits.format(minute) + ":" +
                           twoDigits.format(second);

                //System.out.println("values[" + i + "] = " + values[i]);
                //System.out.println("times[" + i + "] = " + times[i]); 
            }

            //System.out.println("Calling histData");

            // Create a new histData object to contain the data sample
            // values, timestamps, and repeat counts.  Then call the
            // histDataHelper insert method to put this information into
            // an "Any" that will be returned (and sent to the client).

            histData f = new histData(values, times, repCnt);
            histDataHelper.insert(_r, f);

        }
        catch (Exception ex) {
            System.out.println("impl exception caught");
            String msg = " while trying to get byte " + target;
            throw (UnableToGetDataException) err.log (ex, msg);
        }
        
        //System.out.println("returning an Any object");

        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_byte:1.0
    //
    public byte
    get_byte(String target,
             String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        byte _r = (byte)0;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_short:1.0
    //
    public short
    get_short(String target,
              String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        short _r = (short)0;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_long:1.0
    //
    public int
    get_long(String target,
             String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        int _r = 0;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_boolean:1.0
    //
    public boolean
    get_boolean(String target,
                String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        boolean _r = false;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_double:1.0
    //
    public double
    get_double(String target,
               String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        double _r = 0.0;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_float:1.0
    //
    public float
    get_float(String target,
              String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        float _r = 0.0f;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_string:1.0
    //
    public String
    get_string(String target,
               String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        String _r = "";
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_char:1.0
    //
    public char
    get_char(String target,
             String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        char _r = (char)0;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_wstring:1.0
    //
    public String
    get_wstring(String target,
                String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        String _r = "";
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_wchar:1.0
    //
    public char
    get_wchar(String target,
              String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        char _r = (char)0;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_bytea:1.0
    //
    public byte[]
    get_bytea(String target,
              String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        byte[] _r = new byte[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_shorta:1.0
    //
    public short[]
    get_shorta(String target,
               String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        short[] _r = new short[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_longa:1.0
    //
    public int[]
    get_longa(String target,
              String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        int[] _r = new int[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_booleana:1.0
    //
    public boolean[]
    get_booleana(String target,
                 String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        boolean[] _r = new boolean[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_doublea:1.0
    //
    public double[]
    get_doublea(String target,
                String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        double[] _r = new double[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_floata:1.0
    //
    public float[]
    get_floata(String target,
               String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        float[] _r = new float[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_stringa:1.0
    //
    public String[]
    get_stringa(String target,
                String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        String[] _r = new String[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_chara:1.0
    //
    public char[]
    get_chara(String target,
              String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        char[] _r = new char[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/get_wchara:1.0
    //
    public char[]
    get_wchara(String target,
               String[] args)
        throws edu.stanford.slac.except.UnableToGetDataException
    {
        // TODO: implement
        char[] _r = new char[0];
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/set:1.0
    //
    public void
    set(String target,
        org.omg.CORBA.AnyHolder value)
        throws edu.stanford.slac.except.UnableToSetDataException
    {
        // TODO: implement
        value.value = _orb().create_any();
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/startMonitor:1.0
    //
    public void
    startMonitor(String name)
        throws edu.stanford.slac.except.MonitorStartupException
    {
        // TODO: implement
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/stopMonitor:1.0
    //
    public void
    stopMonitor(String name)
        throws edu.stanford.slac.except.MonitorShutdownException
    {
        // TODO: implement
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/status:1.0
    //
    public int
    status()
    {
        // TODO: implement
        int _r = 0;
        return _r;
    }

    //
    // IDL:dp.aida.slac.stanford.edu/dpSlcHist/DpSlcHistI/shutdown:1.0
    //
    public void
    shutdown()
    {
        System.out.println ("Entered shutdown");
        // TODO: implement
    }

    /*******************************
    ** Private methods
    *******************************/

    /*
    ** Converts and Aida query string that are of the form instance//attribute
    ** to an SLC p:m:u.s form by replacing "//" with "." and removing the
    ** last 5 characters (".HIST").
    **
    ** @param Aida query string
    ** @return SLC pmu.s string
    */

    private String queryToSlcHistName (String query)
    {
        int strLen = query.length();
        int iSep = query.lastIndexOf(AQSToken.SEPARATOR);

        return query.substring(0,iSep) + "." + query.substring(iSep+2, strLen-5);
    }

}
