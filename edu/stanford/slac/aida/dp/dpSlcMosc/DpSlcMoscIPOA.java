// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2002
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.2.2

package edu.stanford.slac.aida.dp.dpSlcMosc;

//
// IDL:dp.aida.slac.stanford.edu/dpSlcMosc/DpSlcMoscI:1.0
//
public abstract class DpSlcMoscIPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               DpSlcMoscIOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:dp.aida.slac.stanford.edu/dpSlcMosc/DpSlcMoscI:1.0",
    };

    public DpSlcMoscI
    _this()
    {
        return DpSlcMoscIHelper.narrow(super._this_object());
    }

    public DpSlcMoscI
    _this(org.omg.CORBA.ORB orb)
    {
        return DpSlcMoscIHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "get",
            "get_boolean",
            "get_booleana",
            "get_byte",
            "get_bytea",
            "get_char",
            "get_chara",
            "get_double",
            "get_doublea",
            "get_float",
            "get_floata",
            "get_long",
            "get_longa",
            "get_short",
            "get_shorta",
            "get_string",
            "get_stringa",
            "get_wchar",
            "get_wchara",
            "get_wstring",
            "init",
            "set",
            "shutdown",
            "startMonitor",
            "status",
            "stopMonitor"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // get
            return _OB_op_get(in, handler);

        case 1: // get_boolean
            return _OB_op_get_boolean(in, handler);

        case 2: // get_booleana
            return _OB_op_get_booleana(in, handler);

        case 3: // get_byte
            return _OB_op_get_byte(in, handler);

        case 4: // get_bytea
            return _OB_op_get_bytea(in, handler);

        case 5: // get_char
            return _OB_op_get_char(in, handler);

        case 6: // get_chara
            return _OB_op_get_chara(in, handler);

        case 7: // get_double
            return _OB_op_get_double(in, handler);

        case 8: // get_doublea
            return _OB_op_get_doublea(in, handler);

        case 9: // get_float
            return _OB_op_get_float(in, handler);

        case 10: // get_floata
            return _OB_op_get_floata(in, handler);

        case 11: // get_long
            return _OB_op_get_long(in, handler);

        case 12: // get_longa
            return _OB_op_get_longa(in, handler);

        case 13: // get_short
            return _OB_op_get_short(in, handler);

        case 14: // get_shorta
            return _OB_op_get_shorta(in, handler);

        case 15: // get_string
            return _OB_op_get_string(in, handler);

        case 16: // get_stringa
            return _OB_op_get_stringa(in, handler);

        case 17: // get_wchar
            return _OB_op_get_wchar(in, handler);

        case 18: // get_wchara
            return _OB_op_get_wchara(in, handler);

        case 19: // get_wstring
            return _OB_op_get_wstring(in, handler);

        case 20: // init
            return _OB_op_init(in, handler);

        case 21: // set
            return _OB_op_set(in, handler);

        case 22: // shutdown
            return _OB_op_shutdown(in, handler);

        case 23: // startMonitor
            return _OB_op_startMonitor(in, handler);

        case 24: // status
            return _OB_op_status(in, handler);

        case 25: // stopMonitor
            return _OB_op_stopMonitor(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get(org.omg.CORBA.portable.InputStream in,
               org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            org.omg.CORBA.Any _ob_r = get(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_any(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_boolean(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            boolean _ob_r = get_boolean(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_boolean(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_booleana(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            boolean[] _ob_r = get_booleana(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.BooleanSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_byte(org.omg.CORBA.portable.InputStream in,
                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            byte _ob_r = get_byte(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_octet(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_bytea(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            byte[] _ob_r = get_bytea(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.OctetSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_char(org.omg.CORBA.portable.InputStream in,
                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            char _ob_r = get_char(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_char(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_chara(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            char[] _ob_r = get_chara(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.CharSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_double(org.omg.CORBA.portable.InputStream in,
                      org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            double _ob_r = get_double(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_double(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_doublea(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            double[] _ob_r = get_doublea(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.DoubleSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_float(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            float _ob_r = get_float(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_float(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_floata(org.omg.CORBA.portable.InputStream in,
                      org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            float[] _ob_r = get_floata(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.FloatSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_long(org.omg.CORBA.portable.InputStream in,
                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            int _ob_r = get_long(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_long(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_longa(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            int[] _ob_r = get_longa(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.LongSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_short(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            short _ob_r = get_short(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_short(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_shorta(org.omg.CORBA.portable.InputStream in,
                      org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            short[] _ob_r = get_shorta(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.ShortSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_string(org.omg.CORBA.portable.InputStream in,
                      org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            String _ob_r = get_string(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_string(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_stringa(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            String[] _ob_r = get_stringa(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.StringSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_wchar(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            char _ob_r = get_wchar(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_wchar(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_wchara(org.omg.CORBA.portable.InputStream in,
                      org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            char[] _ob_r = get_wchara(_ob_a0, _ob_a1);
            out = handler.createReply();
            org.omg.CORBA.WCharSeqHelper.write(out, _ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_wstring(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            String _ob_r = get_wstring(_ob_a0, _ob_a1);
            out = handler.createReply();
            out.write_wstring(_ob_r);
        }
        catch(edu.stanford.slac.except.UnableToGetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToGetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_init(org.omg.CORBA.portable.InputStream in,
                org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            init();
            out = handler.createReply();
        }
        catch(edu.stanford.slac.except.ServerInitialisationException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.ServerInitialisationExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_set(org.omg.CORBA.portable.InputStream in,
               org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            String[] _ob_a1 = org.omg.CORBA.StringSeqHelper.read(in);
            org.omg.CORBA.AnyHolder _ob_ah2 = new org.omg.CORBA.AnyHolder();
            _ob_ah2.value = in.read_any();
            set(_ob_a0, _ob_a1, _ob_ah2);
            out = handler.createReply();
            out.write_any(_ob_ah2.value);
        }
        catch(edu.stanford.slac.except.UnableToSetDataException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.UnableToSetDataExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_shutdown(org.omg.CORBA.portable.InputStream in,
                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        shutdown();
        out = handler.createReply();
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_startMonitor(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            startMonitor(_ob_a0);
            out = handler.createReply();
        }
        catch(edu.stanford.slac.except.MonitorStartupException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.MonitorStartupExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_status(org.omg.CORBA.portable.InputStream in,
                  org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        int _ob_r = status();
        out = handler.createReply();
        out.write_long(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_stopMonitor(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            stopMonitor(_ob_a0);
            out = handler.createReply();
        }
        catch(edu.stanford.slac.except.MonitorShutdownException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.stanford.slac.except.MonitorShutdownExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }
}
