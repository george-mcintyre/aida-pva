package edu.stanford.slac.aida.lib.model;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;

import java.util.HashSet;
import java.util.Set;

/**
 * @file
 * This class encapsulates an {@link AidaConfigGroup}.
 * <p>
 * It is used to represent the configuration that will apply to a single group of {@link AidaChannel}s.
 * <p>
 * The {@link AidaConfigGroup} class controls how the AIDA-PVA Channel Provider responds to a channel request.
 * <p>
 * There is a {@link AidaConfigGroup#getterConfig} for the `get` requests,
 * and a {@link AidaConfigGroup#setterConfig} for the `set` requests.
 * <p>
 * The List of {@link AidaConfigGroup#channels} are the names of the channels that will use the specified config
 * @note
 * It uses the `@Data` annotation to provide all the getters and setters,
 * a constructor with all required arguments,
 * and an equals(), hashcode() and toString()  method.
 * @note
 * It also uses the `@NoArgsConstructor` annotation to provide a constructor
 * with no arguments.
 */
@Data
@NoArgsConstructor
public class AidaConfigGroup {
    /**
     * The name of the {@link AidaConfigGroup}.  Currently, this is not used
     */
    private String name;

    /**
     * This is the configuration to be used for `get` requests for the channel names listed in {@link AidaConfigGroup#channels}
     */
    private AidaChannelOperationConfig setterConfig;

    /**
     * This is the configuration to be used for `set` requests for the channel names listed in {@link AidaConfigGroup#channels}
     */
    private AidaChannelOperationConfig getterConfig;

    /**
     * This is the List of names of channels that will use the configurations specified in this {@link AidaConfigGroup}
     */
    private @NonNull Set<String> channels = new HashSet<String>();

    /**
     * We override the toString() method generated by {@link lombok.Data} because we don't want it to
     * print out a million channels if they exist, so we abbreviate them.
     *
     * @return the string representation of this {@link AidaConfigGroup} but with an abbreviated list of channels
     */
    @Override
    public String toString() {
        return "AidaConfigGroup{" +
                "name='" + name + '\'' +
                ", getterConfig=" + getterConfig +
                ", setterConfig=" + setterConfig +
                ((channels.size() > 100) ? ", channels=[large set omitted!]" : ", channels=" + channels) +
                '}';
    }
}
